{
  "version": 3,
  "sources": ["main.ts"],
  "sourcesContent": ["const appRoot = document.querySelector<HTMLElement>(\"#app\");\nif (!appRoot) {\n  throw new Error(\"Missing app root\");\n}\n\nconst consoleOutput = document.querySelector<HTMLPreElement>(\"#console-output\");\nconst healthStatus = document.querySelector<HTMLSpanElement>(\"#health-status\");\nconst serverTime = document.querySelector<HTMLSpanElement>(\"#server-time\");\nconst heartbeat = document.querySelector<HTMLSpanElement>(\"#heartbeat\");\nconst refreshButton = document.querySelector<HTMLButtonElement>(\"#refresh-health\");\nconst canvas = document.querySelector<HTMLCanvasElement>(\"#viewport\");\n\nfunction logToConsole(message: string): void {\n  if (!consoleOutput) {\n    return;\n  }\n  const timestamp = new Date().toLocaleTimeString();\n  consoleOutput.textContent = `[${timestamp}] ${message}\\n${consoleOutput.textContent ?? \"\"}`;\n}\n\nasync function fetchHealth(): Promise<void> {\n  if (!healthStatus) {\n    return;\n  }\n  healthStatus.textContent = \"Checking\u2026\";\n  try {\n    const response = await fetch(\"/health\", { cache: \"no-cache\" });\n    if (!response.ok) {\n      throw new Error(`health check failed with ${response.status}`);\n    }\n    const text = (await response.text()).trim();\n    healthStatus.textContent = text || \"ok\";\n    logToConsole(`Health check succeeded: ${text || \"ok\"}`);\n  } catch (error) {\n    const message = error instanceof Error ? error.message : String(error);\n    healthStatus.textContent = \"offline\";\n    logToConsole(`Health check failed: ${message}`);\n  }\n}\n\nfunction updateServerTime(): void {\n  if (serverTime) {\n    const now = new Date();\n    serverTime.textContent = now.toLocaleTimeString();\n  }\n  if (heartbeat) {\n    heartbeat.textContent = `${Math.round(Math.random() * 1000)} ms`;\n  }\n}\n\nfunction bootViewport(): void {\n  if (!canvas) {\n    return;\n  }\n  const context = canvas.getContext(\"2d\");\n  if (!context) {\n    logToConsole(\"Canvas context unavailable\");\n    return;\n  }\n  const { width, height } = canvas;\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  gradient.addColorStop(0, \"#0f172a\");\n  gradient.addColorStop(1, \"#1e293b\");\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#38bdf8\";\n  context.font = \"24px 'Segoe UI', sans-serif\";\n  context.textAlign = \"center\";\n  context.fillText(\"Mine & Die\", width / 2, height / 2);\n}\n\nrefreshButton?.addEventListener(\"click\", () => {\n  fetchHealth().catch((error) => {\n    logToConsole(`Refresh failed: ${String(error)}`);\n  });\n});\n\nbootViewport();\nupdateServerTime();\nfetchHealth().catch((error) => {\n  logToConsole(`Initial health check failed: ${String(error)}`);\n});\n\nsetInterval(updateServerTime, 1000);\n"],
  "mappings": ";AAAA,IAAM,UAAU,SAAS,cAA2B,MAAM;AAC1D,IAAI,CAAC,SAAS;AACZ,QAAM,IAAI,MAAM,kBAAkB;AACpC;AAEA,IAAM,gBAAgB,SAAS,cAA8B,iBAAiB;AAC9E,IAAM,eAAe,SAAS,cAA+B,gBAAgB;AAC7E,IAAM,aAAa,SAAS,cAA+B,cAAc;AACzE,IAAM,YAAY,SAAS,cAA+B,YAAY;AACtE,IAAM,gBAAgB,SAAS,cAAiC,iBAAiB;AACjF,IAAM,SAAS,SAAS,cAAiC,WAAW;AAEpE,SAAS,aAAa,SAAuB;AAZ7C;AAaE,MAAI,CAAC,eAAe;AAClB;AAAA,EACF;AACA,QAAM,aAAY,oBAAI,KAAK,GAAE,mBAAmB;AAChD,gBAAc,cAAc,IAAI,SAAS,KAAK,OAAO;AAAA,GAAK,mBAAc,gBAAd,YAA6B,EAAE;AAC3F;AAEA,eAAe,cAA6B;AAC1C,MAAI,CAAC,cAAc;AACjB;AAAA,EACF;AACA,eAAa,cAAc;AAC3B,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,WAAW,EAAE,OAAO,WAAW,CAAC;AAC7D,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,IAAI,MAAM,4BAA4B,SAAS,MAAM,EAAE;AAAA,IAC/D;AACA,UAAM,QAAQ,MAAM,SAAS,KAAK,GAAG,KAAK;AAC1C,iBAAa,cAAc,QAAQ;AACnC,iBAAa,2BAA2B,QAAQ,IAAI,EAAE;AAAA,EACxD,SAAS,OAAO;AACd,UAAM,UAAU,iBAAiB,QAAQ,MAAM,UAAU,OAAO,KAAK;AACrE,iBAAa,cAAc;AAC3B,iBAAa,wBAAwB,OAAO,EAAE;AAAA,EAChD;AACF;AAEA,SAAS,mBAAyB;AAChC,MAAI,YAAY;AACd,UAAM,MAAM,oBAAI,KAAK;AACrB,eAAW,cAAc,IAAI,mBAAmB;AAAA,EAClD;AACA,MAAI,WAAW;AACb,cAAU,cAAc,GAAG,KAAK,MAAM,KAAK,OAAO,IAAI,GAAI,CAAC;AAAA,EAC7D;AACF;AAEA,SAAS,eAAqB;AAC5B,MAAI,CAAC,QAAQ;AACX;AAAA,EACF;AACA,QAAM,UAAU,OAAO,WAAW,IAAI;AACtC,MAAI,CAAC,SAAS;AACZ,iBAAa,4BAA4B;AACzC;AAAA,EACF;AACA,QAAM,EAAE,OAAO,OAAO,IAAI;AAC1B,QAAM,WAAW,QAAQ,qBAAqB,GAAG,GAAG,OAAO,MAAM;AACjE,WAAS,aAAa,GAAG,SAAS;AAClC,WAAS,aAAa,GAAG,SAAS;AAClC,UAAQ,YAAY;AACpB,UAAQ,SAAS,GAAG,GAAG,OAAO,MAAM;AAEpC,UAAQ,YAAY;AACpB,UAAQ,OAAO;AACf,UAAQ,YAAY;AACpB,UAAQ,SAAS,cAAc,QAAQ,GAAG,SAAS,CAAC;AACtD;AAEA,+CAAe,iBAAiB,SAAS,MAAM;AAC7C,cAAY,EAAE,MAAM,CAAC,UAAU;AAC7B,iBAAa,mBAAmB,OAAO,KAAK,CAAC,EAAE;AAAA,EACjD,CAAC;AACH;AAEA,aAAa;AACb,iBAAiB;AACjB,YAAY,EAAE,MAAM,CAAC,UAAU;AAC7B,eAAa,gCAAgC,OAAO,KAAK,CAAC,EAAE;AAC9D,CAAC;AAED,YAAY,kBAAkB,GAAI;",
  "names": []
}
